Click on the link below to get started

http://bit.ly/39DTzv4

It would be even better if you copied and pasted this code into intellij
and ran it that way. To see how to install intellij please go here:

https://youtu.be/BzKQneoZB-U

To see how to copy and paste this into a file and run in intellij, simply
go back to part 5 of learn how to program. 

fun main() {
    //Part 1: Burger AND Fries
    //Burger Empire always like to start with your burger
    //and fries. Calculate the price of John's current burger
    //and fries order.
    println(calculateBurgerAndFriesPrice(listOf("BURGER", "FRIES", "KETCHUP", "RACCOON")))

    //Part 2: Mango OR Strawberry?
    //Burger Empire is having a hard time getting its customers to buy
    //shakes. As an incentive to buy the more expensive mango or strawberry
    //shake flavors, Burger Empire offers its customers a free chocolate
    //chip cookie.
    println(calculateShakePrice(listOf("MANGO", "", "PEANUT BUTTER", "JELLY")))

    //Part 3: NOT Full
    //John, our most loyal customers, has an addiction to Burger Empire and he
    //wants to start being more responsible with his food choices. You, as the
    //programmer, should prevent John from making any purchases if he is already full
    //but how do you do this? Well, welcome to the world of programming, where
    //there is typically more than one way to do the exact same thing.

    //BONUS: Add up how much John's order cost and print it to the screen!
}


/* If a customer orders a burger AND fries,
* charge them 3.50. Otherwise, the Burger
* is 3.00 and the fries are 2.00
* return the total value of this part of the order
* as a Double. Assume that you CANNOT buy more than
* one burger and one fry.
**/
fun calculateBurgerAndFriesPrice(orderItems: List<String>): Double {
    return 0.0
}

/* Mango or strawberry shakes cost 3.25 a piece.
* If they order one, they get a cookie! In
* this case you want to return true for the
* second value of the pair. If they
* order a chocolate or vanilla shake, that costs
* 3.00 but they don't get a cookie. In this case
* return false as the second value of the pair.
* The result of calling this function should be
* something like Pair(3.25, true) if they get a cookie
* or Pair(3.00, false) if they didn't. Assume that
* you CAN buy multiple shakes, but you can only
* get one cookie. Even if you buy multiple strawberry
* or mango shakes. JUST ONE COOKIE PER CUSTOMER!
**/
fun calculateShakePrice(orderItems: List<String>): Pair<Double, Boolean> {
    return Pair(0.0, false)
}
